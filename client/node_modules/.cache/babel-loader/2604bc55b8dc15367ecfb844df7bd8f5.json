{"ast":null,"code":"import _slicedToArray from \"/home/user/Desktop/web development/file-uploader/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/user/Desktop/web development/file-uploader/client/src/components/Preview.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport \"./style.css\";\n\nvar Preview = function Preview(_ref) {\n  var files = _ref.files;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      stateFileName = _useState2[0],\n      setStateFileName = _useState2[1];\n\n  var fileChooser = function fileChooser() {\n    setStateFileName(files.fileName); // const fileTypeArray = files.fileName.split(\".\")\n    // const fileType = fileTypeArray[fileTypeArray.length - 1]\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"docs-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, files.map(function (file) {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      onClick: fileChooser,\n      key: \"\".concat(file.fileName),\n      style: {\n        maxWidth: \"200px\"\n      },\n      src: \"//localhost:8000/\".concat(file.filename),\n      alt: file.originalname,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    });\n  }));\n};\n\nexport default Preview;","map":{"version":3,"names":["React","useEffect","useState","Preview","files","stateFileName","setStateFileName","fileChooser","fileName","map","file","maxWidth","filename","originalname"],"sources":["/home/user/Desktop/web development/file-uploader/client/src/components/Preview.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport \"./style.css\"\n\nconst Preview = ({files}) => {\n\n\n    const [stateFileName, setStateFileName] = useState(\"\")\n\n\n    const fileChooser = () => {\n        setStateFileName(files.fileName)\n        // const fileTypeArray = files.fileName.split(\".\")\n        // const fileType = fileTypeArray[fileTypeArray.length - 1]\n    }\n\n\n    return (\n        <div className='docs-content'>\n            {files.map(file => \n            \n            <img onClick={fileChooser} key={`${file.fileName}`} style={{maxWidth: \"200px\"}} src={`//localhost:8000/${file.filename}`} alt={file.originalname}/>\n            \n            )}\n            </div>\n        \n        )\n  }\n\nexport default Preview"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,aAAP;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAa;EAAA,IAAXC,KAAW,QAAXA,KAAW;;EAAA,gBAGiBF,QAAQ,CAAC,EAAD,CAHzB;EAAA;EAAA,IAGlBG,aAHkB;EAAA,IAGHC,gBAHG;;EAMzB,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;IACtBD,gBAAgB,CAACF,KAAK,CAACI,QAAP,CAAhB,CADsB,CAEtB;IACA;EACH,CAJD;;EAOA,oBACI;IAAK,SAAS,EAAC,cAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKJ,KAAK,CAACK,GAAN,CAAU,UAAAC,IAAI;IAAA,oBAEf;MAAK,OAAO,EAAEH,WAAd;MAA2B,GAAG,YAAKG,IAAI,CAACF,QAAV,CAA9B;MAAoD,KAAK,EAAE;QAACG,QAAQ,EAAE;MAAX,CAA3D;MAAgF,GAAG,6BAAsBD,IAAI,CAACE,QAA3B,CAAnF;MAA0H,GAAG,EAAEF,IAAI,CAACG,YAApI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAFe;EAAA,CAAd,CADL,CADJ;AAUD,CAvBH;;AAyBA,eAAeV,OAAf"},"metadata":{},"sourceType":"module"}